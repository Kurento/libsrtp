#!/usr/bin/env bash

# Build a patched package.
#
# This shell script downloads all dependencies and tools needed to build the
# desired package; applies any existing patches to it, and runs the standard
# Debian packaging tools to generate a new package that can be used to replace
# the original one.



# Shell setup
# ===========

# Bash options for strict error checking
set -o errexit -o errtrace -o pipefail -o nounset

# Trace all commands
set -o xtrace



# Configure Apt
# =============

# Disable interactive prompts
export DEBIAN_FRONTEND="noninteractive"

# Enable all source repositories
sed -i 's/# deb-src/deb-src/' /etc/apt/sources.list

apt-get update



# Install dependencies
# ====================

SOURCE_NAME="libsrtp2"

apt-get build-dep --yes "$SOURCE_NAME"



# Prepare source package
# ======================

# Download the original sources from system repositories.
apt-get source "$SOURCE_NAME"
pushd ./"$SOURCE_NAME"*/

# Add patches to the quilt storage.
# During the build process, these will be applied on the source code.
mkdir -p ./debian/patches/
for FILE in ../*.patch; do
    cp "$FILE" ./debian/patches/
    basename "$FILE" >> ./debian/patches/series
done

# Ensure that the patches can be cleanly applied over the original sources.
quilt push
quilt refresh

# Add a non-maintainer version increment, so this package has a greater version
# and gets installed on top of the system's one.
dch --nmu "Apply patches for Kurento."



# Build package
# =============

dpkg-buildpackage -us -uc -b

# Exit the build dir.
popd

# Move everything up, as it is usual for packages to be left in the parent dir.
mv ./*.*deb ../
